buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = project.file('../version.properties').text.replace('version=', '')

repositories {
    mavenCentral()
}

jar {
    baseName = 'place-frontend'
    archiveName = "place-frontend.jar"
    manifest {
        attributes 'Implementation-Vendor': 'alexburchak.org',
                'Implementation-Title': 'Place Frontend',
                'Implementation-Version': version,
                'Built-Date': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Built-Host': InetAddress.getLocalHost().getHostName()
    }
}

dependencies {
    compile project(":place-common")
    compile 'commons-codec:commons-codec:1.10'
    compile 'org.springframework.boot:spring-boot-actuator'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-jersey'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework.kafka:spring-kafka:1.3.2.RELEASE'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.testng:testng:6.13.1'
}

test {
    useTestNG()
}

task compose(type: Copy) {
    description = 'Copy compose files'
    group "Build"

    into("${rootProject.buildDir}")
    into("/compose/place-frontend") {
        from(jar)
    }
}

task zip(type: Zip) {
    description = 'Create zip distribution'
    group "Build"

    archiveName = "${jar.baseName}.zip"

    from("${rootProject.projectDir}/compose/place-frontend/bin/") {
        into('place-frontend/bin/')
    }
    from("src/main/conf/") {
        into('place-frontend/conf/')
    }
    from(jar) {
        into('place-frontend/lib/')
    }
}

build.finalizedBy(compose, zip)
